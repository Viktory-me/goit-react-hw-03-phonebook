{"version":3,"sources":["Components/Section/Section.styled.jsx","Components/Section/Section.jsx","Components/Container/Container.syled.jsx","Components/Container/Container.jsx","Components/Form/Form.jsx","Components/Filter/Filter.styled.jsx","Components/Filter/Filter.jsx","Components/ContactList/ContactList.styled.jsx","Components/ContactList/ContactList.jsx","App.js","index.js"],"names":["Sections","styled","section","Section","children","Contain","div","MyForm","onSubmit","initialValues","name","number","validate","values","errors","test","setSubmitting","resetForm","autoComplete","htmlFor","color","type","placeholder","FilterContainer","Input","input","FilterTitle","p","Filter","value","onChangeFilter","onChange","e","target","ListContact","ul","ItemContact","li","Paragraph","Button","button","ContactList","title","contacts","onDeleteContact","map","contact","onClick","id","App","state","filter","addContact","find","alert","uuid","setState","changeFilter","getVisibleContacts","toLowerCase","includes","deleteContact","contactId","prevState","visibleContacts","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.176ab38b.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\r\n\r\nexport const Sections = styled.section`\r\n  background-color: #44424232;\r\n  margin-top: 20px;\r\n  padding-left: 15px;\r\n  padding-right: 15px;\r\n  padding-top: 10px;\r\n  padding-bottom: 15px;\r\n  &:not(:first-of-type) {\r\n    margin-bottom: 20px;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Sections } from \"./Section.styled\";\r\n\r\nconst Section = ({ children }) => {\r\n  return <Sections>{children}</Sections>;\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node.isRequired,\r\n};\r\nexport default Section;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Contain = styled.div`\r\n  max-width: 320px;\r\n  border: thick double #c21111e2;\r\n  border-radius: 20px;\r\n  background-color: #ffffffba;\r\n  margin: 0 auto;\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Contain } from \"./Container.syled\";\r\n\r\nconst Container = ({ children }) => {\r\n  return <Contain>{children}</Contain>;\r\n};\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\nexport default Contain;\r\n","import React from \"react\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport { RiContactsLine } from \"react-icons/ri\";\r\nimport { BsPhone } from \"react-icons/bs\";\r\nimport \"./Form.module.css\";\r\n\r\nfunction MyForm({ onSubmit }) {\r\n  return (\r\n    <Formik\r\n      initialValues={{ name: \"\", number: \"\" }}\r\n      validate={(values) => {\r\n        const errors = {};\r\n        if (!values.name) {\r\n          errors.name = \"Enter name\";\r\n        } else if (!values.number) {\r\n          errors.number = \"Enter number\";\r\n        } else if (\r\n          !/\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/i.test(\r\n            values.number\r\n          )\r\n        ) {\r\n          errors.number =\r\n            \"The number can only include numbers, spaces, dashes, brackets and start with +\";\r\n        }\r\n        return errors;\r\n      }}\r\n      onSubmit={(values, { setSubmitting, resetForm }) => {\r\n        // console.log(values);\r\n        onSubmit(values);\r\n        setSubmitting(false);\r\n        resetForm();\r\n      }}\r\n    >\r\n      <Form autoComplete='off'>\r\n        <label htmlFor='name'>\r\n          <RiContactsLine color='#c21111e2'></RiContactsLine> Name\r\n        </label>\r\n        <Field type='name' name='name' placeholder='enter name' />\r\n        <ErrorMessage name='name' />\r\n\r\n        <label htmlFor='number'>\r\n          <BsPhone color='#c21111e2'></BsPhone>Number\r\n        </label>\r\n        <Field type='tel' name='number' placeholder='+111-111-11' />\r\n        <ErrorMessage name='number' />\r\n\r\n        <button type='submit'>Add contact</button>\r\n      </Form>\r\n    </Formik>\r\n  );\r\n}\r\n\r\nexport default MyForm;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const FilterContainer = styled.div``;\r\nexport const Input = styled.input``;\r\nexport const FilterTitle = styled.p`\r\n  display: flex;\r\n  align-items: center;\r\n  margin: 0 auto;\r\n  margin-bottom: 5px;\r\n  font-weight: 500;\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { RiPhoneFindLine } from \"react-icons/ri\";\r\nimport { FilterContainer, Input, FilterTitle } from \"./Filter.styled\";\r\n\r\nexport default function Filter({ value, onChangeFilter }) {\r\n  return (\r\n    <FilterContainer>\r\n      <FilterTitle>\r\n        <RiPhoneFindLine color='#c21111e2'></RiPhoneFindLine>\r\n        Find contacts by name\r\n      </FilterTitle>\r\n      <Input\r\n        type='text'\r\n        value={value}\r\n        onChange={(e) => onChangeFilter(e.target.value)}\r\n        placeholder='enter name'\r\n      />\r\n    </FilterContainer>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onchangeFilter: PropTypes.func,\r\n};\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const ListContact = styled.ul`\r\n  list-style: none;\r\n  padding-inline-start: 5px;\r\n  margin: 0 auto;\r\n  margin-top: 5px;\r\n`;\r\nexport const ItemContact = styled.li`\r\n  padding: 5px 0 5px 0;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-evenly;\r\n`;\r\n\r\nexport const Paragraph = styled.p`\r\n  margin-left: 1px;\r\n  margin-right: 10px;\r\n  margin-top: 0;\r\n  margin-bottom: 0;\r\n`;\r\nexport const Button = styled.button``;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { RiContactsLine, RiDeleteBinLine } from \"react-icons/ri\";\r\nimport { BsPhone } from \"react-icons/bs\";\r\nimport {\r\n  ListContact,\r\n  ItemContact,\r\n  Paragraph,\r\n  Button,\r\n} from \"./ContactList.styled\";\r\n\r\nexport default function ContactList({ title, contacts, onDeleteContact }) {\r\n  return (\r\n    <>\r\n      <ListContact title='Contacts'>\r\n        {contacts.map((contact) => (\r\n          <ItemContact key={contact.id}>\r\n            <RiContactsLine color='#c21111e2'></RiContactsLine>\r\n            <Paragraph>{contact.name}</Paragraph>{\" \"}\r\n            <BsPhone color='#c21111e2'></BsPhone>{\" \"}\r\n            <Paragraph>{contact.number}</Paragraph>\r\n            <Button onClick={() => onDeleteContact(contact.id)}>\r\n              <RiDeleteBinLine></RiDeleteBinLine>\r\n            </Button>\r\n          </ItemContact>\r\n        ))}\r\n      </ListContact>\r\n    </>\r\n  );\r\n}\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n};\r\n","import { Component } from \"react\";\nimport { v4 as uuid } from \"uuid\";\nimport \"./App.css\";\nimport Section from \"./Components/Section/Section\";\nimport Container from \"./Components/Container/Container\";\nimport MyForm from \"./Components/Form/Form\";\nimport Filter from \"./Components/Filter/Filter\";\nimport ContactList from \"./Components/ContactList/ContactList\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n    name: \"\",\n    number: \"\",\n  };\n\n  addContact = ({ name, number }) => {\n    if (this.state.contacts.find((contact) => contact.name === name)) {\n      alert(`${name} is already in contacts.`);\n      return;\n    }\n    const contact = {\n      id: uuid(),\n      name,\n      number,\n    };\n    this.setState(({ contacts }) => ({\n      contacts: [contact, ...contacts],\n    }));\n  };\n\n  changeFilter = (filter) => {\n    this.setState({ filter });\n  };\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n\n    return contacts.filter((contacts) =>\n      contacts.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  deleteContact = (contactId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(\n        (contact) => contact.id !== contactId\n      ),\n    }));\n  };\n\n  render() {\n    const visibleContacts = this.getVisibleContacts();\n    const { filter } = this.state;\n    return (\n      <Container>\n        <Section>\n          <h1>Phonebook</h1>\n          <MyForm onSubmit={this.addContact} />\n        </Section>\n        <Section>\n          <h2>Contacts</h2>\n          <Filter value={filter} onChangeFilter={this.changeFilter} />\n          <ContactList\n            contacts={visibleContacts}\n            onDeleteContact={this.deleteContact}\n          ></ContactList>\n        </Section>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}